#!/usr/bin/env ruby

# A few helpful tips about the Rules file:
#
# * The string given to #compile and #route are matching patterns for
#   identifiers--not for paths. Therefore, you can’t match on extension.
#
# * The order of rules is important: for each item, only the first matching
#   rule is applied.
#
# * Item identifiers start and end with a slash (e.g. “/about/” for the file
#   “content/about.html”). To select all children, grandchildren, … of an
#   item, use the pattern “/about/*/”; “/about/*” will also select the parent,
#   because “*” matches zero or more characters.

preprocess do
    $tutorial_list = tuts_list
end

compile '*' do
  if item[:extension] == 'css'
    # don’t filter stylesheets
  elsif item[:extension] == 'js'
    # don’t filter stylesheets
  elsif item[:extension] == 'md'
    filter :kramdown
    if item[:layout] != nil
        #puts "[#{Rainbow(item.reference).red}]\t\t layout '#{Rainbow(item[:layout]).yellow}' requested in front matter"
        layout item[:layout]
    else
        layout 'default'
    end
  elsif item.binary?
    # don’t filter binary items
  else
    filter :erb
    if item[:layout] != nil
        #puts "[#{Rainbow(item.reference).red}]\t\t requested layout '#{item[:layout]}' in front matter"
        layout item[:layout]
    else
        layout 'default'
    end
  end
end

route '*' do
  if item[:extension] == 'css'
    # Write item with identifier /foo/ to /foo.css
    item.identifier.chop + '.css'
  elsif item[:extension] == 'js'
    # Write item with identifier /foo/ to /foo.css
    item.identifier.chop + '.js'
  elsif item[:extension] == 'svg'
    # Write item with identifier /foo/ to /foo.css
    item.identifier.chop + '.svg'
  elsif item[:extension] == 'ttf'
    # Write item with identifier /foo/ to /foo.css
    item.identifier.chop + '.ttf'
  elsif item[:extension] == 'otf'
    # Write item with identifier /foo/ to /foo.css
    item.identifier.chop + '.otf'
  elsif item[:extension] == 'wof'
    # Write item with identifier /foo/ to /foo.css
    item.identifier.chop + '.wof'
  elsif item[:extension] == 'eot'
    # Write item with identifier /foo/ to /foo.css
    item.identifier.chop + '.eot'
  elsif item[:extension] == nil
    # so it doesnt explode when someone drops a file without an extention in
    item.identifier.chop
  elsif item.binary?
    # Write item with identifier /foo/ to /foo.ext
    if item[:extension] != nil
        item.identifier.chop + '.' + item[:extension]
    end
  else
    # Write item with identifier /foo/ to /foo/index.html
    item.identifier + 'index.html'
  end
end

layout '*', :erb
